[ Builder Pattern ]
    1) Lombok 라이브러리에서 제공하는 객체 생성 패턴
    2) 목적
        복잡한 객체 생성을 간단하고 직관적으로 표현
    3) 장점
        - 객체 생성 시, 매개변수의 순서 규칙이 없으므로, 매개변수가 많을 때 매우 편리
        - 필요한 매개변수만 선택적으로 사용하여 객체 초기화를 할 수 있음
    4) 주요 어노테이션 + 메소드
        - @Builder : DTO class 상단에 기재
        - .builder()    : 빌더 객체 시작점
        - .속성명(초기값) : 지정한 속성명에 초기값을 대입
        - .build()      : 빌더 객체의 끝점
    5) 사용법
        (1) Builder 패턴을 사용할 클래스(일반적으로 DTO 클래스)위에 @Builder 어노테이션 기재 + (No/All argConstructor)
        (2) 빌더 패턴 사용
            Class명 변수명 = Class명.builder().속성명.(값).build()

* static
    정적 변수/메소드로, 객체 없이 사용되는 변수·메소드 = builder
    클래스명.메소드