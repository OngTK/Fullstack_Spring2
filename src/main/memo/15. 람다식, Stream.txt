[ 람다 표현식 ]
    1) 정의
        - 익명함수를 간결하게 표현하는 방법
        - Java8 이상 문법

    2) 목적
        - 메소드 선언 없이 구현부만 간단하게 작성

    3) 사용처
        (1) Stream API
        (2) Java GUI

    4) 주요 Interface
        (1) Function < T, R >
            - 입력 T , 결과 R
            - 입력을 받아 결과를 반환
            - .apply(T) 메소드를 사용하여 실행

        (2) Supplier < T >
            - 입력 X, 결과 T
            - 입력없이 결과만 반환
            - .get(T) 메소드를 사용하여 실행

        (3) Consumer < T >
            - 입력 T, 결과 X
            - 입력을 받지만 결과가 없음
            - .accept(T) 메소드를 사용하여 실행

        (4) Predicate< T >
            - 입력 T, 결과 True·False
            - 입력을 받아 Boolean을 반환
            - .test(T) 메소드를 사용하여 실행

    5) 활용
        1) 추상메소드 구현체
        2) 컬렉션 프레임워크

[ Stream API ]
    1) 정의
        - 데이터의 연속된 흐름을 이용하여 처리하는 방식
    2) 흐름
        [ 데이터 ] --> [ 중간 연산 ] --> [ 최종 연산 ]
    3) 주요 연산
        (1) 중간 연산
            - map, filter, sort, distinct, limit etc.

        (2) 최종 연산
            - forEach, collect, reduce