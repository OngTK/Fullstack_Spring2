[ 쿠키 ]
    1. 정의
        : Clinet 측 웹 브라우저의 임시 저장소
    2. 목적
        1) 로그인 상태 유지
        2) 사용자 맞춤 설정 : 테마, 언어 등 개인 설정 값
        3) (개인) 통계 또는 분석 : 방문자 행동분석 기록
    3. 비교
        | 구분 | 저장 위치  |     유효기간     | 보안 |       예시       |
        | --- | --------- | -------------- | ----| ---------------- |
        | 세션 |    서버   |  서버 종료시 삭제 | 높음 |       로그인      |
        | 쿠키 | 클라이언트 | Client 직접 삭제 | 낮음 | 장바구니/자동로그인 |

        * 활용
            - 세션은 서버에 저장하므로 보안성은 높지만,
              대규모 시 서버에서는 과부하가 증가할 수 있음
            - 쿠키는 Client에 저장하므로 보안성은 낮지마,
              대규모 시 서버 과부하를 낮출 수 있음
    4. 쿠키 보안
        1) 민감 정보는 저장하지 않음
        2) ` .setHttpOnly( true ) ` : 자바 스크립트 접근 차단
        3) ` .setSecure( true ); `  : HTTPS 환경에서의 쿠키 송수신 보안 설정
        4) ` .setMaxAge( 60 ) `     : 만료시간 설정, 단위 sec

    5. 쿠키 사용법 ( Controller 단 )
        1) 쿠키 객체 생성
            ` Cookie 쿠키객체 = new Cookie( "쿠키명" , value ); `
        2) 설정
            ` 쿠키객체.setPath("/")  `          : 쿠키 접근 경로 설정
            ` 쿠키객체.setMaxAge( 60 ) `        : 만료시간 설정, 단위 sec
            ` 쿠키객체.setHttpOnly( true ) `    : JS 접근 차단
            ` 쿠키객체.setSecure( true ) `      : HTTPS 환경에서의 쿠키 송수신 보안 설정
        3) 쿠키 등록 및 response
            ```java
                public ResponseEntity<?> login(@RequestBody Dto dto, HttpServletResponse response) {
                    ...
                    response.addCookie(cookie); // cookie 객체를 클라이언트에 반환
                    ...
                }
            ```
        4) 쿠키 확인 및 request
            ```java
                public ResponseEntity<?> myInfo(HttpServletRequest request){
                    ...
                    // [3.1] 클라이언트 브라우저에 저장된 모든 쿠키 가저오기
                            Cookie[] cookies = request.getCookies();

                    // [3.2] 반복문을 이용한 특정 쿠키 찾기
                    if (cookies != null){
                        for(Cookie cookie : cookies){
                            // 현재의 cookie의 이름이 loginUser 라면
                            if(cookie.getName().equals("loginUser") ) {
                                String uid = cookie.getValue(); // 쿠키의 저장된 값 반환 : uid

                                // [3.3] service의 내 정보 조회 메소드 실행
                                UserDto result = userService.myInfo(uid);
                                return ResponseEntity.ok(result);
                            }
                        }
                    }
                    ...
                }
            ```

        5) 쿠키 삭제
            ```java
                public ResponseEntity<?> logOut(HttpServletResponse response){
                    // [4.1] 삭제할 쿠키명을 null 값으로 변경
                    Cookie cookie = new Cookie("loginUser", null);
                    cookie.setHttpOnly(true);
                    cookie.setSecure(false);
                    cookie.setPath("/");
                    cookie.setMaxAge(0); // 즉시 실행 = 즉시 null 처리 = 즉시 삭제

                    response.addCookie(cookie); // 동일한 쿠키명이 있다면 덮어쓰기!
                    return ResponseEntity.ok(true);
                }// func end
            ```